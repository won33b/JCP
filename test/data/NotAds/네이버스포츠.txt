	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta http-equiv="X-UA-Compatible" content="requiresActiveX=true">
	<meta name="viewport" content="width=1080px,maximum-scale=2.0,minimum-scale=0.4,user-scalable=yes">
	<meta property="og:image"       content="https://imgsports.pstatic.net/images/mobile/common/NAVERsports.png"/>
	<meta property="og:title"		content
	<meta property="og:description" conten
	<meta name="description" conten
	

<script>
	try {
		var deployPhase = 'release';
		if (deployPhase === 'release') {
			JEagleEyeClient.attachOnError();

		} else if (deployPhase === 'dev') {
			JEagleEyeClient.setDebugOnly(true);
			JEagleEyeClient.attachOnError();

		} else {
			// local
			JEagleEyeClient.attachOnError();
		}
	} catch (e) {

		},
		_initVars: function (htOption) {
			this._lnbMenus = htOption.lnbMenus || {};
			this._pathname = location.pathname;
			this._search = location.search;
			this._targetUpperSection = htOption.targetUpperSection;

		},
		_initHandlebarsTemplate: function () {
			this._sportsLnbMenuLiTemplate = Handlebars.compile($("#_sports_lnb_menu_li_template").html());


			Handlebars.registerHelper('isSpotType', function (options) {
				if (this.c === 'baseball9' || this.c === 'spotv') {
					return options.fn(this);
				} else {
					return options.inverse(this);
				}
			});

		},
		_init: function () {

			if ($("div#lnb_main_sub").length > 0) {
				$("div#lnb_main_sub").detach();
			}

			_.each(this._lnbMenus, $.proxy(function (menu) {
				var upperSection = menu.upperSection;
				this._updateSelectedMenu(menu, upperSection);
				_.each(menu.subMenuList, $.proxy(function (subMenu) {
					this._updateSelectedMenu(subMenu, upperSection);
				}, this));
			}, this));

			this._draw();
		},
		_setEventHandler: function () {
		},
		_draw: function () {
			_.each(this._lnbMenus, $.proxy(function (menu) {
				var menuHtml = this._sportsLnbMenuLiTemplate(menu);

				if (menu.side === 'left') {
					$("#_sports_lnb_menu ul.main_menu_list").last().append(menuHtml);
				} else {
					$("#_sports_lnb_menu ul.side_menu_list").last().append(menuHtml);
				}

			}, this));

			if ($("a.link_main_menu[aria-current='page']").siblings("ul").children().length > 0) {
	


	<script>
		naver = window.naver || {};
		naver.sports = naver.sports || {};
		naver.sports.section = naver.sports.section || {};
		naver.sports.section.home = naver.sports.section.home || {};
		naver.sports.section.home.LiveBox = eg.Class({

			_SCROLL_PANNEL_SIZE: 4,
			_EMPTY_LIVEBOX_CARD: "<div class=\"live_box_card\"></div>",

			construct: function (htOption) {
				this._initVars(htOption);
				this._initHandlebarsTemplate();
				this._init();
			},
			_initVars: function (htOption) {
				this._liveBoxList = htOption.liveBoxList || {};
				this._liveBoxBeforeList = htOption.liveBoxBeforeList || {};
				this._totalCardCnt = 0;
		
			_init: function () {
				(naver.sports.team && naver.sports.team.MyTeam) ?
					new naver.sports.team.MyTeam({
						"callbackFn": $.proxy(function (subscribeList) {
							this._sort(subscribeList);
							this._draw();
						}, this)
					}) : this._draw();
	
				for (var i = 0; i < emptyCardSize; ++i) {
					cards.push(this._EMPTY_LIVEBOX_CARD);
				}

				_.each(cards, $.proxy(function (card) {
					$("#_section_home_live_scroll").append(card);

				}, this));

				if (cards.length > 4) {
					this._initScrolling();
				}

				// $("#veta_skin_left").length > 0 ? $("#veta_skin_left").css("top", "316px") : "";
				// $("#veta_skin_right").length > 0 ? $("#veta_skin_right").css("top", "316px") : "";
			},

			_initScrolling: function () {
				this._scroll = new IScroll("#_section_home_live_scroll_holder", {
					scrollbars: false,
					scrollX: true,
					scrollY: false,
					mouseWheel: true,
					snap: $('.live_box_card'),
					bounce: true,
					preventDefault: true,
				});
				this._prevButton = $("#_section_home_livebox_root button.button_prev");
				this._nextButton = $("#_section_home_livebox_root button.button_next");

				var pages = this._scroll.pages;
				var cardPadding = pages[0][0].x - pages[1][0].x;
				var pageLength = this._scroll.pages.length;
				var buttonHideCss = "-52px";
				var buttonShowCss = "0px";

				if (pages[pageLength - 2][0].x - pages[pageLength - 1][0].x < cardPadding) {
					pages[pageLength - 2] = pages[pageLength - 1];
					pages.splice(pageLength-1, 1);
				}

				/* events */
				var fnFadeOut = $.proxy(function () {
				
					this._nextButton.find("span.page").fadeOut(200).delay(200).fadeIn();
					this._prevButton.find("span.page").fadeOut(200).delay(200).fadeIn();
				}, this);


				this._scroll.on('scrollEnd', fnRearrange);
				this._scroll.on('scrollCancel', fnRearrange);
				this._scroll.on('scrollStart', fnFadeOut);

			
				$(window).on("resize", fnRearrange);
				fnRearrange();

				/* buttons */
				this._prevButton.on("click", $.proxy(function (e) {
					clickcr(this, 'lbx.search', '', '', e);
					fnFadeOut();
					this._scroll.goToPage(Math.max(this._scroll.currentPage.pageX - this._SCROLL_PANNEL_SIZE, 0), 0, 200);
				}, this));

				this._nextButton.on("click", $.proxy(function (e) {
					clickcr(this, 'lbx.search', '', '', e);
					fnFadeOut();
					this._scroll.goToPage(Math.min(this._scroll.currentPage.pageX + this._SCROLL_PANNEL_SIZE, this._totalCardCnt), 0, 200);
				}, this));

			}


			var reality = Math.floor(this._videoResult.length / this.PAGING_VIDEO_COUNT) || 1;
			var expected = Math.floor(this._config.extractedVideoCount / this.PAGING_VIDEO_COUNT);
			this._pageNum = Math.min(reality, expected);

			this._extractVideoCount = this._pageNum * this.PAGING_VIDEO_COUNT;
		},

		_initHandlebarsTemplate: function () {
			this._videoHeadConfigTemplate = Handlebars.compile($("#_video_head_config_template").html());
			this._videoItemTemplate = Handlebars.compile($("#_video_item_template").html());
		},

		_setEventHandlers: function () {
			$(".aside_creator").on("click", ".pagination .button_prev", $.proxy(function (event) {
				event.preventDefault();
				var $curTarget = $(event.currentTarget);
				var $currentPage = $curTarget.parent().find(".page");
				var currentPageNumber = $currentPage.data("current");

				if (currentPageNumber > $curTarget.data("first")) {
					this._showTargetGroup(currentPageNumber - 1);
					$currentPage.find(".current").text(currentPageNumber - 1);
					$currentPage.data("current", currentPageNumber - 1);
				}

				this._checkPageButtonDisable();
			}, this));

			$(".aside_creator").on("click", ".pagination .button_next", $.proxy(function (event) {
				event.preventDefault();
				var $curTarget = $(event.currentTarget);
				var $currentPage = $curTarget.parent().find(".page");
				var currentPageNumber = $currentPage.data("current");

				if (currentPageNumber < $curTarget.data("last")) {
					this._showTargetGroup(currentPageNumber + 1);
					$currentPage.find(".current").text(currentPageNumber + 1);
					$currentPage.data("current", currentPageNumber + 1);
				}

				this._checkPageButtonDisable();
			}, this))
		},

		_draw: function () {
			
			var configTemplateParam = {
				title: this._config.title,
				pageNum: this._pageNum
			};
			$(".aside_creator").find(".aside_head").html(this._videoHeadConfigTemplate(configTemplateParam));

			
			var samplingVideo = _.sample(this._videoResult, this._extractVideoCount);
			_.each(samplingVideo, function(item, index){
				item.group = Math.floor(index / 7) + 1;
			});

			$(".aside_creator").find(".creator_list").html(this._videoItemTemplate(samplingVideo));
			this._showTargetGroup("1");

		
			this._checkPageButtonDisable();
		},

		_showTargetGroup: function (group) {
			$(".aside_creator").find(".creator_list .creator_item").hide();
			$(".aside_creator").find(".creator_list .creator_item[data-group=" + group + "]").show();
		},

		_checkPageButtonDisable:function () {
			var currentPageNumber = $(".aside_creator").find(".pagination .page").data("current");
			var lastPageNumber = $(".aside_creator").find(".pagination .button_next").data("last");
			$(".aside_creator").find(".pagination .button_prev").attr("disabled", currentPageNumber === 1);
			$(".aside_creator").find(".pagination .button_next").attr("disabled", currentPageNumber === lastPageNumber);
